// Code generated by ent, DO NOT EDIT.

package ent

import (
	"movie-app/ent/schema"
	"movie-app/ent/user"
	"movie-app/ent/userpost"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescName is the schema descriptor for name field.
	userDescName := userFields[1].Descriptor()
	// user.DefaultName holds the default value on creation for the name field.
	user.DefaultName = userDescName.Default.(string)
	// user.NameValidator is a validator for the "name" field. It is called by the builders before save.
	user.NameValidator = userDescName.Validators[0].(func(string) error)
	// userDescPassword is the schema descriptor for password field.
	userDescPassword := userFields[2].Descriptor()
	// user.DefaultPassword holds the default value on creation for the password field.
	user.DefaultPassword = userDescPassword.Default.(string)
	// user.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	user.PasswordValidator = userDescPassword.Validators[0].(func(string) error)
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[3].Descriptor()
	// user.DefaultEmail holds the default value on creation for the email field.
	user.DefaultEmail = userDescEmail.Default.(string)
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescCreateTime is the schema descriptor for create_time field.
	userDescCreateTime := userFields[4].Descriptor()
	// user.DefaultCreateTime holds the default value on creation for the create_time field.
	user.DefaultCreateTime = userDescCreateTime.Default.(time.Time)
	// userDescID is the schema descriptor for id field.
	userDescID := userFields[0].Descriptor()
	// user.IDValidator is a validator for the "id" field. It is called by the builders before save.
	user.IDValidator = userDescID.Validators[0].(func(int) error)
	userpostFields := schema.UserPost{}.Fields()
	_ = userpostFields
	// userpostDescCreateTime is the schema descriptor for create_time field.
	userpostDescCreateTime := userpostFields[3].Descriptor()
	// userpost.DefaultCreateTime holds the default value on creation for the create_time field.
	userpost.DefaultCreateTime = userpostDescCreateTime.Default.(time.Time)
	// userpostDescID is the schema descriptor for id field.
	userpostDescID := userpostFields[0].Descriptor()
	// userpost.IDValidator is a validator for the "id" field. It is called by the builders before save.
	userpost.IDValidator = userpostDescID.Validators[0].(func(int) error)
}
